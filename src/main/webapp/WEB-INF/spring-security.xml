<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<context:component-scan base-package="pl.pniedziela" />
	<mvc:annotation-driven validator="validator" />
	<tx:annotation-driven />
	<jpa:repositories base-package="pl.pniedziela"
		factory-class="org.springframework.data.jpa.datatables.repository.DataTablesRepositoryFactoryBean" />
	<aop:aspectj-autoproxy />
	<mvc:resources location="/resources/" mapping="/resources/**" />
	<global-method-security pre-post-annotations="enabled" />

	<http auto-config="true">
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/activate**" access="isAnonymous()" />
		<intercept-url pattern="/activate/**" access="isAnonymous()" />
		<intercept-url pattern="/login**" access="isAnonymous()" />
		<intercept-url pattern="/login/**" access="isAnonymous()" />
		<intercept-url pattern="/register**" access="isAnonymous()" />
		<intercept-url pattern="/register/**" access="isAnonymous()" />
		<intercept-url pattern="/remindPassword**" access="isAnonymous()" />
		<intercept-url pattern="/remindPassword/**" access="isAnonymous()" />
		<intercept-url pattern="/logged**" access="isAuthenticated()" />
		<intercept-url pattern="/logout**" access="isAuthenticated()" />
		<intercept-url pattern="/afterLogout**" access="isAnonymous()" />

		<form-login authentication-failure-handler-ref="authenticationHandler"
			authentication-success-handler-ref="authenticationHandler"
			login-page="/login" username-parameter="username" password-parameter="password"
			login-processing-url="/j_spring_security_check" />

		<remember-me authentication-success-handler-ref="authenticationHandler"
			services-ref="rememberMeServices" />

		<custom-filter before="FORM_LOGIN_FILTER" ref="myAuthFilter" />
		<custom-filter before="REMEMBER_ME_FILTER" ref="rememberMeFilter" />
		<custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrentSessionFilter" />

		<session-management
			session-authentication-strategy-ref="sas" />
	</http>

	<beans:bean id="rememberMeFilter"
		class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<beans:constructor-arg name="authenticationManager"
			ref="customAuthenticationProvider" />
		<beans:constructor-arg name="rememberMeServices"
			ref="rememberMeServices" />
		<beans:property name="authenticationSuccessHandler"
			ref="authenticationHandler" />
	</beans:bean>



	<beans:bean id="rememberMeServices" class="pl.pniedziela.security.AutoLoginProvider">
		<beans:constructor-arg value="myAppKey" />
		<beans:constructor-arg ref="userDetailsServiceImpl" />
		<beans:constructor-arg ref="jdbcTokenRepository" />
		<beans:property name="cookieName" value="my-remember-me" />
		<beans:property name="tokenLength" value="32" />
		<beans:property name="parameter" value="remember-me" />
	</beans:bean>

	<beans:bean id="customAuthenticationProvider"
		class="pl.pniedziela.security.CustomAuthenticationProvider">
	</beans:bean>

	<!-- <beans:bean id="tokenRepository" class="org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl"> 
		</beans:bean> -->
	<!-- <beans:bean class="org.springframework.security.web.session.ConcurrentSessionFilter"> 
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" /> <beans:constructor-arg 
		name="expiredUrl" value="/sessionExpired" /> </beans:bean> -->

	<beans:bean id="myAuthFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">

		<beans:property name="authenticationManager" ref="customAuthenticationProvider" />
		<beans:property name="rememberMeServices" ref="rememberMeServices"></beans:property>
		<beans:property name="sessionAuthenticationStrategy"
			ref="sas" />
	</beans:bean>

	<beans:bean id="jdbcTokenRepository"
		class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
		<beans:property name="createTableOnStartup" value="false" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="authenticationHandler"
		class="pl.pniedziela.security.AuthenticationHandler">
	</beans:bean>

	<beans:bean id="rememberMeAuthenticationProvider"
		class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<beans:constructor-arg name="key" value="myAppKey" />
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="customAuthenticationProvider" />
		<authentication-provider ref="rememberMeAuthenticationProvider" />
	</authentication-manager>



	<!-- <beans:bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy"> 
		<beans:constructor-arg> <beans:list> <beans:bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy"> 
		<beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" /> </beans:bean> 
		<beans:bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" 
		/> <beans:bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy"> 
		<beans:constructor-arg ref="sessionRegistry" /> </beans:bean> </beans:list> 
		</beans:constructor-arg> </beans:bean> -->

	<!-- <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" 
		/> -->
	<!-- <beans:bean id="rememberMeAuthenticationProvider" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices"> 
		<beans:constructor-arg name="key" value="myAppKey" /> <beans:constructor-arg 
		name="userDetailsService" ref="userDetailsServiceImpl" /> <beans:constructor-arg 
		name="tokenRepository" ref="jdbcTokenRepository" /> </beans:bean> -->



	<beans:bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<beans:property name="driverClass" value="org.postgresql.Driver"></beans:property>
		<beans:property name="jdbcUrl"
			value="jdbc:postgresql://127.0.0.1:5432/PanelAdmina"></beans:property>
		<beans:property name="user" value="test" />
		<!-- <beans:property name="jdbcUrl" value="jdbc:postgresql://localhost:5432/ServiceDesk" 
			/> <beans:property name="user" value="appUser" /> -->
		<beans:property name="password" value="test" />
		<beans:property name="autoCommitOnClose" value="true"></beans:property>
		<beans:property name="initialPoolSize" value="10"></beans:property>
		<beans:property name="maxPoolSize" value="200"></beans:property>
	</beans:bean>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

	<beans:bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="test" />
		<beans:property name="password" value="test" />

		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="packagesToScan" value="pl.pniedziela" />
		<beans:property name="jpaVendorAdapter">
			<beans:bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<beans:property name="showSql" value="false" />
				<beans:property name="databasePlatform"
					value="org.hibernate.dialect.PostgreSQLDialect" />
			</beans:bean>
		</beans:property>
		<beans:property name="jpaProperties">
			<beans:props>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
	<beans:bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	<beans:bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<beans:property name="entityManagerFactory" ref="entityManagerFactory" />
	</beans:bean>

	<beans:bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<beans:property name="supportedMediaTypes" value="application/json" />
	</beans:bean>

	<beans:bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<beans:property name="validationMessageSource" ref="messageSource" />
	</beans:bean>

	<beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basenames"
			value="pl.pniedziela.web.messages.messages,org.hibernate.validator.ValidationMessages" />
		<beans:property name="useCodeAsDefaultMessage" value="false" />
	</beans:bean>

	<beans:bean class="org.hyperic.sigar.Sigar" />

	<!-- <beans:bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry"> 
		<beans:property name="connectionFactories"> <beans:list> <beans:bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory"> 
		<beans:constructor-arg value="1143445835686973" /> <beans:constructor-arg 
		value="d812124f7b9ba517bf0c04d96eea1caa" /> </beans:bean> </beans:list> </beans:property> 
		</beans:bean> -->





	<beans:bean id="sas"
		class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
		<beans:property name="maximumSessions" value="1" />
	</beans:bean>

	<beans:bean id="sessionRegistry"
		class="org.springframework.security.core.session.SessionRegistryImpl" />

	<beans:bean id="filterMultipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000" />
	</beans:bean>
	<beans:bean id="concurrentSessionFilter"
		class="org.springframework.security.web.session.ConcurrentSessionFilter">
		<beans:constructor-arg name="sessionRegistry"
			ref="sessionRegistry" />
	</beans:bean>
</beans:beans>